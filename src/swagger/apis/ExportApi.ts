/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    ErrorResponse,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    RenderGenericTableParams,
    RenderGenericTableParamsFromJSON,
    RenderGenericTableParamsToJSON,
} from '../models';

export interface RenderGenericTableRequest {
    renderGenericTableParams: RenderGenericTableParams;
}

/**
 * 
 */
export class ExportApi extends runtime.BaseAPI {

    /**
     * Render a `GenericTable`, as retrievable from other endpoints. By default, this will return a PDF download. If the header `Accept` is set to `text/html`, output will be an HTML document.
     */
    async renderGenericTableRaw(requestParameters: RenderGenericTableRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<runtime.ApiResponse<string>> {
        if (requestParameters.renderGenericTableParams === null || requestParameters.renderGenericTableParams === undefined) {
            throw new runtime.RequiredError('renderGenericTableParams','Required parameter requestParameters.renderGenericTableParams was null or undefined when calling renderGenericTable.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-brkrz-client-id"] = this.configuration.apiKey("x-brkrz-client-id"); // clientId authentication
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["x-access-token"] = this.configuration.apiKey("x-access-token"); // idToken authentication
        }

        const response = await this.request({
            path: `/export/renderGenericTable`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: RenderGenericTableParamsToJSON(requestParameters.renderGenericTableParams),
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Render a `GenericTable`, as retrievable from other endpoints. By default, this will return a PDF download. If the header `Accept` is set to `text/html`, output will be an HTML document.
     */
    async renderGenericTable(requestParameters: RenderGenericTableRequest, initOverrides?: RequestInit | runtime.InitOverideFunction): Promise<string> {
        const response = await this.renderGenericTableRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
