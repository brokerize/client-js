/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    AuthInfo,
    AuthInfoFromJSON,
    AuthInfoFromJSONTyped,
    AuthInfoToJSON,
} from './AuthInfo';

/**
 * 
 * @export
 * @interface GetAuthInfoResponse
 */
export interface GetAuthInfoResponse {
    /**
     * 
     * @type {AuthInfo}
     * @memberof GetAuthInfoResponse
     */
    authInfo: AuthInfo;
}

export function GetAuthInfoResponseFromJSON(json: any): GetAuthInfoResponse {
    return GetAuthInfoResponseFromJSONTyped(json, false);
}

export function GetAuthInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAuthInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'authInfo': AuthInfoFromJSON(json['authInfo']),
    };
}

export function GetAuthInfoResponseToJSONRecursive(value?: GetAuthInfoResponse | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'authInfo': AuthInfoToJSON(value.authInfo),
    };
}

export function GetAuthInfoResponseToJSON(value?: GetAuthInfoResponse | null): any {
    return GetAuthInfoResponseToJSONRecursive(value, false);
}
