/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  TradeDraft,
  TradeDraftFromJSON,
  TradeDraftFromJSONTyped,
  TradeDraftToJSON,
} from "./TradeDraft";

/**
 *
 * @export
 * @interface GetActiveTradeDraftsResponse
 */
export interface GetActiveTradeDraftsResponse {
  /**
   *
   * @type {number}
   * @memberof GetActiveTradeDraftsResponse
   */
  totalCount: number;
  /**
   *
   * @type {Array<TradeDraft>}
   * @memberof GetActiveTradeDraftsResponse
   */
  tradeDrafts: Array<TradeDraft>;
}

export function GetActiveTradeDraftsResponseFromJSON(
  json: any
): GetActiveTradeDraftsResponse {
  return GetActiveTradeDraftsResponseFromJSONTyped(json, false);
}

export function GetActiveTradeDraftsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GetActiveTradeDraftsResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    totalCount: json["totalCount"],
    tradeDrafts: (json["tradeDrafts"] as Array<any>).map(TradeDraftFromJSON),
  };
}

export function GetActiveTradeDraftsResponseToJSONRecursive(
  value?: GetActiveTradeDraftsResponse | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    totalCount: value.totalCount,
    tradeDrafts: (value.tradeDrafts as Array<any>).map(TradeDraftToJSON),
  };
}

export function GetActiveTradeDraftsResponseToJSON(
  value?: GetActiveTradeDraftsResponse | null
): any {
  return GetActiveTradeDraftsResponseToJSONRecursive(value, false);
}
