/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface EnableSessionTanParamsChallengeResponseSpecifics
 */
export interface EnableSessionTanParamsChallengeResponseSpecifics {
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsChallengeResponseSpecifics
     */
    challengeResponse?: string;
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsChallengeResponseSpecifics
     */
    challengeId?: string;
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsChallengeResponseSpecifics
     */
    authMethod?: string;
}

export function EnableSessionTanParamsChallengeResponseSpecificsFromJSON(json: any): EnableSessionTanParamsChallengeResponseSpecifics {
    return EnableSessionTanParamsChallengeResponseSpecificsFromJSONTyped(json, false);
}

export function EnableSessionTanParamsChallengeResponseSpecificsFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnableSessionTanParamsChallengeResponseSpecifics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'challengeResponse': !exists(json, 'challengeResponse') ? undefined : json['challengeResponse'],
        'challengeId': !exists(json, 'challengeId') ? undefined : json['challengeId'],
        'authMethod': !exists(json, 'authMethod') ? undefined : json['authMethod'],
    };
}

export function EnableSessionTanParamsChallengeResponseSpecificsToJSONRecursive(value?: EnableSessionTanParamsChallengeResponseSpecifics | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'challengeResponse': value.challengeResponse,
        'challengeId': value.challengeId,
        'authMethod': value.authMethod,
    };
}

export function EnableSessionTanParamsChallengeResponseSpecificsToJSON(value?: EnableSessionTanParamsChallengeResponseSpecifics | null): any {
    return EnableSessionTanParamsChallengeResponseSpecificsToJSONRecursive(value, false);
}
