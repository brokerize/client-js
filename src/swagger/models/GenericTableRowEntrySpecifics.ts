/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  GenericTableRowValue,
  GenericTableRowValueFromJSON,
  GenericTableRowValueFromJSONTyped,
  GenericTableRowValueToJSON,
} from "./GenericTableRowValue";

/**
 *
 * @export
 * @interface GenericTableRowEntrySpecifics
 */
export interface GenericTableRowEntrySpecifics {
  /**
   *
   * @type {string}
   * @memberof GenericTableRowEntrySpecifics
   */
  caption?: string;
  /**
   *
   * @type {string}
   * @memberof GenericTableRowEntrySpecifics
   */
  id?: string;
  /**
   *
   * @type {boolean}
   * @memberof GenericTableRowEntrySpecifics
   */
  isImportant?: boolean;
  /**
   *
   * @type {GenericTableRowValue}
   * @memberof GenericTableRowEntrySpecifics
   */
  value?: GenericTableRowValue;
}

export function GenericTableRowEntrySpecificsFromJSON(
  json: any
): GenericTableRowEntrySpecifics {
  return GenericTableRowEntrySpecificsFromJSONTyped(json, false);
}

export function GenericTableRowEntrySpecificsFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GenericTableRowEntrySpecifics {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    caption: !exists(json, "caption") ? undefined : json["caption"],
    id: !exists(json, "id") ? undefined : json["id"],
    isImportant: !exists(json, "isImportant") ? undefined : json["isImportant"],
    value: !exists(json, "value")
      ? undefined
      : GenericTableRowValueFromJSON(json["value"]),
  };
}

export function GenericTableRowEntrySpecificsToJSONRecursive(
  value?: GenericTableRowEntrySpecifics | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    caption: value.caption,
    id: value.id,
    isImportant: value.isImportant,
    value: GenericTableRowValueToJSON(value.value),
  };
}

export function GenericTableRowEntrySpecificsToJSON(
  value?: GenericTableRowEntrySpecifics | null
): any {
  return GenericTableRowEntrySpecificsToJSONRecursive(value, false);
}
