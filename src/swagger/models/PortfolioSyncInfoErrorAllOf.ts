/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortfolioSyncInfoErrorAllOf
 */
export interface PortfolioSyncInfoErrorAllOf {
    /**
     * 
     * @type {string}
     * @memberof PortfolioSyncInfoErrorAllOf
     */
    status?: PortfolioSyncInfoErrorAllOfStatusEnum;
}


/**
 * @export
 */
export const PortfolioSyncInfoErrorAllOfStatusEnum = {
    Error: 'ERROR'
} as const;
export type PortfolioSyncInfoErrorAllOfStatusEnum = typeof PortfolioSyncInfoErrorAllOfStatusEnum[keyof typeof PortfolioSyncInfoErrorAllOfStatusEnum];


export function PortfolioSyncInfoErrorAllOfFromJSON(json: any): PortfolioSyncInfoErrorAllOf {
    return PortfolioSyncInfoErrorAllOfFromJSONTyped(json, false);
}

export function PortfolioSyncInfoErrorAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioSyncInfoErrorAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function PortfolioSyncInfoErrorAllOfToJSONRecursive(value?: PortfolioSyncInfoErrorAllOf | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'status': value.status,
    };
}

export function PortfolioSyncInfoErrorAllOfToJSON(value?: PortfolioSyncInfoErrorAllOf | null): any {
    return PortfolioSyncInfoErrorAllOfToJSONRecursive(value, false);
}
