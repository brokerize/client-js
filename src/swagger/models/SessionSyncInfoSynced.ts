/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    SessionSyncInfoSyncedAllOf,
    SessionSyncInfoSyncedAllOfFromJSON,
    SessionSyncInfoSyncedAllOfFromJSONTyped,
    SessionSyncInfoSyncedAllOfToJSON,
} from './SessionSyncInfoSyncedAllOf';
import {
    SessionSyncInfoSyncedSpecifics,
    SessionSyncInfoSyncedSpecificsFromJSON,
    SessionSyncInfoSyncedSpecificsFromJSONTyped,
    SessionSyncInfoSyncedSpecificsToJSON,
} from './SessionSyncInfoSyncedSpecifics';

/**
 * 
 * @export
 * @interface SessionSyncInfoSynced
 */
export interface SessionSyncInfoSynced {
    /**
     * 
     * @type {string}
     * @memberof SessionSyncInfoSynced
     */
    status: SessionSyncInfoSyncedStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof SessionSyncInfoSynced
     */
    lastSync: Date;
}


/**
 * @export
 */
export const SessionSyncInfoSyncedStatusEnum = {
    Synced: 'SYNCED'
} as const;
export type SessionSyncInfoSyncedStatusEnum = typeof SessionSyncInfoSyncedStatusEnum[keyof typeof SessionSyncInfoSyncedStatusEnum];


export function SessionSyncInfoSyncedFromJSON(json: any): SessionSyncInfoSynced {
    return SessionSyncInfoSyncedFromJSONTyped(json, false);
}

export function SessionSyncInfoSyncedFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionSyncInfoSynced {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'lastSync': (new Date(json['lastSync'])),
    };
}

export function SessionSyncInfoSyncedToJSONRecursive(value?: SessionSyncInfoSynced | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'status': value.status,
        'lastSync': (value.lastSync.toISOString()),
    };
}

export function SessionSyncInfoSyncedToJSON(value?: SessionSyncInfoSynced | null): any {
    return SessionSyncInfoSyncedToJSONRecursive(value, false);
}
