/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  OrderStatus,
  OrderStatusFromJSON,
  OrderStatusFromJSONTyped,
  OrderStatusToJSON,
} from "./OrderStatus";

/**
 *
 * @export
 * @interface BrokerMetaFeatures
 */
export interface BrokerMetaFeatures {
  /**
   * If set and `true`, orders retrieved in order lists or individually via `GetOrder` are expected to contain the `exchangeName` field.
   * Some brokers do not provide this information, so it is fine to hide the column in the UI if this is not true.
   * @type {boolean}
   * @memberof BrokerMetaFeatures
   */
  orderExchangeNames?: boolean;
  /**
   * If set and `true`, `Position.profitLossAbsPrevClose` is generally available for positions of this broker.
   * @type {boolean}
   * @memberof BrokerMetaFeatures
   */
  positionProfitLossAbsPrevClose?: boolean;
  /**
   * If set and `true`, `Position.profitLossRel` is generally available for positions of this broker.
   * @type {boolean}
   * @memberof BrokerMetaFeatures
   */
  positionProfitLossRel?: boolean;
  /**
   * If set and `true`, `Position.profitLossRelPrevClose` is generally available for positions of this broker.
   * @type {boolean}
   * @memberof BrokerMetaFeatures
   */
  positionProfitLossRelPrevClose?: boolean;
  /**
   *
   * @type {Array<OrderStatus>}
   * @memberof BrokerMetaFeatures
   */
  supportedOrderStatuses: Array<OrderStatus>;
}

export function BrokerMetaFeaturesFromJSON(json: any): BrokerMetaFeatures {
  return BrokerMetaFeaturesFromJSONTyped(json, false);
}

export function BrokerMetaFeaturesFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BrokerMetaFeatures {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    orderExchangeNames: !exists(json, "orderExchangeNames")
      ? undefined
      : json["orderExchangeNames"],
    positionProfitLossAbsPrevClose: !exists(
      json,
      "positionProfitLossAbsPrevClose"
    )
      ? undefined
      : json["positionProfitLossAbsPrevClose"],
    positionProfitLossRel: !exists(json, "positionProfitLossRel")
      ? undefined
      : json["positionProfitLossRel"],
    positionProfitLossRelPrevClose: !exists(
      json,
      "positionProfitLossRelPrevClose"
    )
      ? undefined
      : json["positionProfitLossRelPrevClose"],
    supportedOrderStatuses: (json["supportedOrderStatuses"] as Array<any>).map(
      OrderStatusFromJSON
    ),
  };
}

export function BrokerMetaFeaturesToJSONRecursive(
  value?: BrokerMetaFeatures | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    orderExchangeNames: value.orderExchangeNames,
    positionProfitLossAbsPrevClose: value.positionProfitLossAbsPrevClose,
    positionProfitLossRel: value.positionProfitLossRel,
    positionProfitLossRelPrevClose: value.positionProfitLossRelPrevClose,
    supportedOrderStatuses: (value.supportedOrderStatuses as Array<any>).map(
      OrderStatusToJSON
    ),
  };
}

export function BrokerMetaFeaturesToJSON(
  value?: BrokerMetaFeatures | null
): any {
  return BrokerMetaFeaturesToJSONRecursive(value, false);
}
