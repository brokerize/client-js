/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  SummarizedTrade,
  SummarizedTradeFromJSON,
  SummarizedTradeFromJSONTyped,
  SummarizedTradeToJSON,
} from "./SummarizedTrade";

/**
 *
 * @export
 * @interface GetPortfolioTradesResponse
 */
export interface GetPortfolioTradesResponse {
  /**
   *
   * @type {number}
   * @memberof GetPortfolioTradesResponse
   */
  totalCount: number;
  /**
   *
   * @type {Array<SummarizedTrade>}
   * @memberof GetPortfolioTradesResponse
   */
  trades: Array<SummarizedTrade>;
}

export function GetPortfolioTradesResponseFromJSON(
  json: any
): GetPortfolioTradesResponse {
  return GetPortfolioTradesResponseFromJSONTyped(json, false);
}

export function GetPortfolioTradesResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): GetPortfolioTradesResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    totalCount: json["totalCount"],
    trades: (json["trades"] as Array<any>).map(SummarizedTradeFromJSON),
  };
}

export function GetPortfolioTradesResponseToJSONRecursive(
  value?: GetPortfolioTradesResponse | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    totalCount: value.totalCount,
    trades: (value.trades as Array<any>).map(SummarizedTradeToJSON),
  };
}

export function GetPortfolioTradesResponseToJSON(
  value?: GetPortfolioTradesResponse | null
): any {
  return GetPortfolioTradesResponseToJSONRecursive(value, false);
}
