/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EnableSessionTanParamsTanAllOf,
    EnableSessionTanParamsTanAllOfFromJSON,
    EnableSessionTanParamsTanAllOfFromJSONTyped,
    EnableSessionTanParamsTanAllOfToJSON,
} from './EnableSessionTanParamsTanAllOf';
import {
    EnableSessionTanParamsTanSpecifics,
    EnableSessionTanParamsTanSpecificsFromJSON,
    EnableSessionTanParamsTanSpecificsFromJSONTyped,
    EnableSessionTanParamsTanSpecificsToJSON,
} from './EnableSessionTanParamsTanSpecifics';

/**
 * 
 * @export
 * @interface EnableSessionTanParamsTan
 */
export interface EnableSessionTanParamsTan {
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsTan
     */
    kind: EnableSessionTanParamsTanKindEnum;
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsTan
     */
    tan: string;
    /**
     * 
     * @type {string}
     * @memberof EnableSessionTanParamsTan
     */
    authMethod: string;
}


/**
 * @export
 */
export const EnableSessionTanParamsTanKindEnum = {
    Tan: 'tan'
} as const;
export type EnableSessionTanParamsTanKindEnum = typeof EnableSessionTanParamsTanKindEnum[keyof typeof EnableSessionTanParamsTanKindEnum];


export function EnableSessionTanParamsTanFromJSON(json: any): EnableSessionTanParamsTan {
    return EnableSessionTanParamsTanFromJSONTyped(json, false);
}

export function EnableSessionTanParamsTanFromJSONTyped(json: any, ignoreDiscriminator: boolean): EnableSessionTanParamsTan {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'kind': json['kind'],
        'tan': json['tan'],
        'authMethod': json['authMethod'],
    };
}

export function EnableSessionTanParamsTanToJSONRecursive(value?: EnableSessionTanParamsTan | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'kind': value.kind,
        'tan': value.tan,
        'authMethod': value.authMethod,
    };
}

export function EnableSessionTanParamsTanToJSON(value?: EnableSessionTanParamsTan | null): any {
    return EnableSessionTanParamsTanToJSONRecursive(value, false);
}
