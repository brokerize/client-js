/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthMethodTanSpecifics
 */
export interface AuthMethodTanSpecifics {
    /**
     * If this is true, the auth method should not be offered to users on phones (e.g. for photoTAN, where the TAN has to
     * be scanned with a phone).
     * @type {boolean}
     * @memberof AuthMethodTanSpecifics
     */
    hideOnPhones?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthMethodTanSpecifics
     */
    tanFieldLabel?: string;
    /**
     * 
     * @type {boolean}
     * @memberof AuthMethodTanSpecifics
     */
    isDefaultMethod?: boolean;
    /**
     * 
     * @type {string}
     * @memberof AuthMethodTanSpecifics
     */
    label?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthMethodTanSpecifics
     */
    id?: string;
}

export function AuthMethodTanSpecificsFromJSON(json: any): AuthMethodTanSpecifics {
    return AuthMethodTanSpecificsFromJSONTyped(json, false);
}

export function AuthMethodTanSpecificsFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthMethodTanSpecifics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hideOnPhones': !exists(json, 'hideOnPhones') ? undefined : json['hideOnPhones'],
        'tanFieldLabel': !exists(json, 'tanFieldLabel') ? undefined : json['tanFieldLabel'],
        'isDefaultMethod': !exists(json, 'isDefaultMethod') ? undefined : json['isDefaultMethod'],
        'label': !exists(json, 'label') ? undefined : json['label'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function AuthMethodTanSpecificsToJSONRecursive(value?: AuthMethodTanSpecifics | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'hideOnPhones': value.hideOnPhones,
        'tanFieldLabel': value.tanFieldLabel,
        'isDefaultMethod': value.isDefaultMethod,
        'label': value.label,
        'id': value.id,
    };
}

export function AuthMethodTanSpecificsToJSON(value?: AuthMethodTanSpecifics | null): any {
    return AuthMethodTanSpecificsToJSONRecursive(value, false);
}
