/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Session,
    SessionFromJSON,
    SessionFromJSONTyped,
    SessionToJSON,
} from './Session';

/**
 * 
 * @export
 * @interface SessionResponse
 */
export interface SessionResponse {
    /**
     * 
     * @type {Array<Session>}
     * @memberof SessionResponse
     */
    sessions: Array<Session>;
}

export function SessionResponseFromJSON(json: any): SessionResponse {
    return SessionResponseFromJSONTyped(json, false);
}

export function SessionResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SessionResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sessions': ((json['sessions'] as Array<any>).map(SessionFromJSON)),
    };
}

export function SessionResponseToJSONRecursive(value?: SessionResponse | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'sessions': ((value.sessions as Array<any>).map(SessionToJSON)),
    };
}

export function SessionResponseToJSON(value?: SessionResponse | null): any {
    return SessionResponseToJSONRecursive(value, false);
}
