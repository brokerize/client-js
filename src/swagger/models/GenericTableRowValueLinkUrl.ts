/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GenericTableRowValueLinkUrlAllOf,
    GenericTableRowValueLinkUrlAllOfFromJSON,
    GenericTableRowValueLinkUrlAllOfFromJSONTyped,
    GenericTableRowValueLinkUrlAllOfToJSON,
} from './GenericTableRowValueLinkUrlAllOf';
import {
    GenericTableRowValueLinkUrlSpecifics,
    GenericTableRowValueLinkUrlSpecificsFromJSON,
    GenericTableRowValueLinkUrlSpecificsFromJSONTyped,
    GenericTableRowValueLinkUrlSpecificsToJSON,
} from './GenericTableRowValueLinkUrlSpecifics';

/**
 * 
 * @export
 * @interface GenericTableRowValueLinkUrl
 */
export interface GenericTableRowValueLinkUrl {
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkUrl
     */
    type: GenericTableRowValueLinkUrlTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkUrl
     */
    url: string;
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkUrl
     */
    text: string;
}


/**
 * @export
 */
export const GenericTableRowValueLinkUrlTypeEnum = {
    Url: 'url'
} as const;
export type GenericTableRowValueLinkUrlTypeEnum = typeof GenericTableRowValueLinkUrlTypeEnum[keyof typeof GenericTableRowValueLinkUrlTypeEnum];


export function GenericTableRowValueLinkUrlFromJSON(json: any): GenericTableRowValueLinkUrl {
    return GenericTableRowValueLinkUrlFromJSONTyped(json, false);
}

export function GenericTableRowValueLinkUrlFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenericTableRowValueLinkUrl {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'url': json['url'],
        'text': json['text'],
    };
}

export function GenericTableRowValueLinkUrlToJSONRecursive(value?: GenericTableRowValueLinkUrl | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'type': value.type,
        'url': value.url,
        'text': value.text,
    };
}

export function GenericTableRowValueLinkUrlToJSON(value?: GenericTableRowValueLinkUrl | null): any {
    return GenericTableRowValueLinkUrlToJSONRecursive(value, false);
}
