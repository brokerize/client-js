/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface CreateTradeResponse
 */
export interface CreateTradeResponse {
  /**
   * If a decoupled method is used to create the trade, the creation process can be observed through the
   * `decoupledOperationId`. In this case, no `orderId` is returned.
   * @type {string}
   * @memberof CreateTradeResponse
   */
  decoupledOperationId?: string;
  /**
   * The id of the created order, if applicable. Some brokers don't return an orderId in all cases, so
   * frontends should be able to just show a generic "order has been created" message in this case.
   * @type {string}
   * @memberof CreateTradeResponse
   */
  orderId?: string;
}

export function CreateTradeResponseFromJSON(json: any): CreateTradeResponse {
  return CreateTradeResponseFromJSONTyped(json, false);
}

export function CreateTradeResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): CreateTradeResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    decoupledOperationId: !exists(json, "decoupledOperationId")
      ? undefined
      : json["decoupledOperationId"],
    orderId: !exists(json, "orderId") ? undefined : json["orderId"],
  };
}

export function CreateTradeResponseToJSONRecursive(
  value?: CreateTradeResponse | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    decoupledOperationId: value.decoupledOperationId,
    orderId: value.orderId,
  };
}

export function CreateTradeResponseToJSON(
  value?: CreateTradeResponse | null
): any {
  return CreateTradeResponseToJSONRecursive(value, false);
}
