/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GenericTable,
    GenericTableFromJSON,
    GenericTableFromJSONTyped,
    GenericTableToJSON,
} from './GenericTable';

/**
 * 
 * @export
 * @interface RenderGenericTableParams
 */
export interface RenderGenericTableParams {
    /**
     * 
     * @type {GenericTable}
     * @memberof RenderGenericTableParams
     */
    table: GenericTable;
}

export function RenderGenericTableParamsFromJSON(json: any): RenderGenericTableParams {
    return RenderGenericTableParamsFromJSONTyped(json, false);
}

export function RenderGenericTableParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): RenderGenericTableParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'table': GenericTableFromJSON(json['table']),
    };
}

export function RenderGenericTableParamsToJSONRecursive(value?: RenderGenericTableParams | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'table': GenericTableToJSON(value.table),
    };
}

export function RenderGenericTableParamsToJSON(value?: RenderGenericTableParams | null): any {
    return RenderGenericTableParamsToJSONRecursive(value, false);
}
