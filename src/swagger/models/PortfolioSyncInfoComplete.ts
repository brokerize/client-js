/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PortfolioSyncInfoCompleteAllOf,
    PortfolioSyncInfoCompleteAllOfFromJSON,
    PortfolioSyncInfoCompleteAllOfFromJSONTyped,
    PortfolioSyncInfoCompleteAllOfToJSON,
} from './PortfolioSyncInfoCompleteAllOf';
import {
    PortfolioSyncInfoCompleteSpecifics,
    PortfolioSyncInfoCompleteSpecificsFromJSON,
    PortfolioSyncInfoCompleteSpecificsFromJSONTyped,
    PortfolioSyncInfoCompleteSpecificsToJSON,
} from './PortfolioSyncInfoCompleteSpecifics';

/**
 * 
 * @export
 * @interface PortfolioSyncInfoComplete
 */
export interface PortfolioSyncInfoComplete {
    /**
     * 
     * @type {string}
     * @memberof PortfolioSyncInfoComplete
     */
    status: PortfolioSyncInfoCompleteStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof PortfolioSyncInfoComplete
     */
    lastSync: Date;
}


/**
 * @export
 */
export const PortfolioSyncInfoCompleteStatusEnum = {
    Complete: 'COMPLETE'
} as const;
export type PortfolioSyncInfoCompleteStatusEnum = typeof PortfolioSyncInfoCompleteStatusEnum[keyof typeof PortfolioSyncInfoCompleteStatusEnum];


export function PortfolioSyncInfoCompleteFromJSON(json: any): PortfolioSyncInfoComplete {
    return PortfolioSyncInfoCompleteFromJSONTyped(json, false);
}

export function PortfolioSyncInfoCompleteFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioSyncInfoComplete {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'lastSync': (new Date(json['lastSync'])),
    };
}

export function PortfolioSyncInfoCompleteToJSONRecursive(value?: PortfolioSyncInfoComplete | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'status': value.status,
        'lastSync': (value.lastSync.toISOString()),
    };
}

export function PortfolioSyncInfoCompleteToJSON(value?: PortfolioSyncInfoComplete | null): any {
    return PortfolioSyncInfoCompleteToJSONRecursive(value, false);
}
