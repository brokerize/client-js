/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface ReportConfig
 */
export interface ReportConfig {
  /**
   *
   * @type {Array<string>}
   * @memberof ReportConfig
   */
  clientIds: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof ReportConfig
   */
  onlyExecutedOrders: boolean;
  /**
   *
   * @type {string}
   * @memberof ReportConfig
   */
  format: string;
  /**
   *
   * @type {string}
   * @memberof ReportConfig
   */
  from: string;
  /**
   *
   * @type {string}
   * @memberof ReportConfig
   */
  to: string;
}

export function ReportConfigFromJSON(json: any): ReportConfig {
  return ReportConfigFromJSONTyped(json, false);
}

export function ReportConfigFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ReportConfig {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    clientIds: json["clientIds"],
    onlyExecutedOrders: json["onlyExecutedOrders"],
    format: json["format"],
    from: json["from"],
    to: json["to"],
  };
}

export function ReportConfigToJSONRecursive(
  value?: ReportConfig | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    clientIds: value.clientIds,
    onlyExecutedOrders: value.onlyExecutedOrders,
    format: value.format,
    from: value.from,
    to: value.to,
  };
}

export function ReportConfigToJSON(value?: ReportConfig | null): any {
  return ReportConfigToJSONRecursive(value, false);
}
