/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import {
    LoginResponseChallenge,
    LoginResponseChallengeFromJSON,
    LoginResponseChallengeFromJSONTyped,
    LoginResponseChallengeToJSON,
} from './LoginResponseChallenge';
import {
    LoginResponseReady,
    LoginResponseReadyFromJSON,
    LoginResponseReadyFromJSONTyped,
    LoginResponseReadyToJSON,
} from './LoginResponseReady';

/**
 * @type LoginResponse
 * 
 * @export
 */
export type LoginResponse = { state: 'challenge' } & LoginResponseChallenge | { state: 'ready' } & LoginResponseReady;

export function LoginResponseFromJSON(json: any): LoginResponse {
    return LoginResponseFromJSONTyped(json, false);
}

export function LoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LoginResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    switch (json['state']) {
        case 'challenge':
            return {...LoginResponseChallengeFromJSONTyped(json, true), state: 'challenge'};
        case 'ready':
            return {...LoginResponseReadyFromJSONTyped(json, true), state: 'ready'};
        default:
            throw new Error(`No variant of LoginResponse exists with 'state=${json['state']}'`);
    }
}

export function LoginResponseToJSON(value?: LoginResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    switch (value['state']) {
        case 'challenge':
            return LoginResponseChallengeToJSON(value);
        case 'ready':
            return LoginResponseReadyToJSON(value);
        default:
            throw new Error(`No variant of LoginResponse exists with 'state=${value['state']}'`);
    }
}

