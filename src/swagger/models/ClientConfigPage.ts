/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  PageConfig,
  PageConfigFromJSON,
  PageConfigFromJSONTyped,
  PageConfigToJSON,
} from "./PageConfig";

/**
 *
 * @export
 * @interface ClientConfigPage
 */
export interface ClientConfigPage {
  /**
   *
   * @type {any}
   * @memberof ClientConfigPage
   */
  themeDark?: any | null;
  /**
   *
   * @type {any}
   * @memberof ClientConfigPage
   */
  themeLight?: any | null;
  /**
   *
   * @type {string}
   * @memberof ClientConfigPage
   */
  logoUrlDark?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigPage
   */
  logoUrlLight?: string;
  /**
   *
   * @type {string}
   * @memberof ClientConfigPage
   */
  title?: string;
}

export function ClientConfigPageFromJSON(json: any): ClientConfigPage {
  return ClientConfigPageFromJSONTyped(json, false);
}

export function ClientConfigPageFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ClientConfigPage {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    themeDark: !exists(json, "themeDark") ? undefined : json["themeDark"],
    themeLight: !exists(json, "themeLight") ? undefined : json["themeLight"],
    logoUrlDark: !exists(json, "logoUrlDark") ? undefined : json["logoUrlDark"],
    logoUrlLight: !exists(json, "logoUrlLight")
      ? undefined
      : json["logoUrlLight"],
    title: !exists(json, "title") ? undefined : json["title"],
  };
}

export function ClientConfigPageToJSONRecursive(
  value?: ClientConfigPage | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    themeDark: value.themeDark,
    themeLight: value.themeLight,
    logoUrlDark: value.logoUrlDark,
    logoUrlLight: value.logoUrlLight,
    title: value.title,
  };
}

export function ClientConfigPageToJSON(value?: ClientConfigPage | null): any {
  return ClientConfigPageToJSONRecursive(value, false);
}
