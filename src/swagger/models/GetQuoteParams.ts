/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Direction,
    DirectionFromJSON,
    DirectionFromJSONTyped,
    DirectionToJSON,
} from './Direction';

/**
 * 
 * @export
 * @interface GetQuoteParams
 */
export interface GetQuoteParams {
    /**
     * 
     * @type {string}
     * @memberof GetQuoteParams
     */
    brokerExchangeId: string;
    /**
     * 
     * @type {number}
     * @memberof GetQuoteParams
     */
    size: number;
    /**
     * 
     * @type {Direction}
     * @memberof GetQuoteParams
     */
    direction: Direction;
    /**
     * 
     * @type {string}
     * @memberof GetQuoteParams
     */
    isin: string;
}

export function GetQuoteParamsFromJSON(json: any): GetQuoteParams {
    return GetQuoteParamsFromJSONTyped(json, false);
}

export function GetQuoteParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetQuoteParams {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'brokerExchangeId': json['brokerExchangeId'],
        'size': json['size'],
        'direction': DirectionFromJSON(json['direction']),
        'isin': json['isin'],
    };
}

export function GetQuoteParamsToJSONRecursive(value?: GetQuoteParams | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'brokerExchangeId': value.brokerExchangeId,
        'size': value.size,
        'direction': DirectionToJSON(value.direction),
        'isin': value.isin,
    };
}

export function GetQuoteParamsToJSON(value?: GetQuoteParams | null): any {
    return GetQuoteParamsToJSONRecursive(value, false);
}
