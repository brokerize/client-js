/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 1.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  LegalTermConfirmItem,
  LegalTermConfirmItemFromJSON,
  LegalTermConfirmItemFromJSONTyped,
  LegalTermConfirmItemToJSON,
} from "./LegalTermConfirmItem";

/**
 *
 * @export
 * @interface LegalTermsResponse
 */
export interface LegalTermsResponse {
  /**
   *
   * @type {Array<string>}
   * @memberof LegalTermsResponse
   * @deprecated
   */
  checkboxesHtml: Array<string>;
  /**
   *
   * @type {Array<LegalTermConfirmItem>}
   * @memberof LegalTermsResponse
   */
  confirmItems: Array<LegalTermConfirmItem>;
  /**
   *
   * @type {string}
   * @memberof LegalTermsResponse
   */
  disclaimerHtml: string;
}

export function LegalTermsResponseFromJSON(json: any): LegalTermsResponse {
  return LegalTermsResponseFromJSONTyped(json, false);
}

export function LegalTermsResponseFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): LegalTermsResponse {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    checkboxesHtml: json["checkboxesHtml"],
    confirmItems: (json["confirmItems"] as Array<any>).map(
      LegalTermConfirmItemFromJSON
    ),
    disclaimerHtml: json["disclaimerHtml"],
  };
}

export function LegalTermsResponseToJSONRecursive(
  value?: LegalTermsResponse | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    checkboxesHtml: value.checkboxesHtml,
    confirmItems: (value.confirmItems as Array<any>).map(
      LegalTermConfirmItemToJSON
    ),
    disclaimerHtml: value.disclaimerHtml,
  };
}

export function LegalTermsResponseToJSON(
  value?: LegalTermsResponse | null
): any {
  return LegalTermsResponseToJSONRecursive(value, false);
}
