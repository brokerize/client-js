/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface BrokerEnvironment
 */
export interface BrokerEnvironment {
  /**
   *
   * @type {string}
   * @memberof BrokerEnvironment
   */
  id: string;
  /**
   *
   * @type {boolean}
   * @memberof BrokerEnvironment
   */
  isTestingEnvironment: boolean;
  /**
   *
   * @type {string}
   * @memberof BrokerEnvironment
   */
  label: string;
}

export function BrokerEnvironmentFromJSON(json: any): BrokerEnvironment {
  return BrokerEnvironmentFromJSONTyped(json, false);
}

export function BrokerEnvironmentFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): BrokerEnvironment {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    isTestingEnvironment: json["isTestingEnvironment"],
    label: json["label"],
  };
}

export function BrokerEnvironmentToJSONRecursive(
  value?: BrokerEnvironment | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    id: value.id,
    isTestingEnvironment: value.isTestingEnvironment,
    label: value.label,
  };
}

export function BrokerEnvironmentToJSON(value?: BrokerEnvironment | null): any {
  return BrokerEnvironmentToJSONRecursive(value, false);
}
