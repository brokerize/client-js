/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 1.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  OrderIntent,
  OrderIntentFromJSON,
  OrderIntentFromJSONTyped,
  OrderIntentToJSON,
} from "./OrderIntent";

/**
 *
 * @export
 * @interface OrderIntentAvailability
 */
export interface OrderIntentAvailability {
  /**
   *
   * @type {Array<OrderIntent>}
   * @memberof OrderIntentAvailability
   */
  buy: Array<OrderIntent>;
  /**
   *
   * @type {Array<OrderIntent>}
   * @memberof OrderIntentAvailability
   */
  sell: Array<OrderIntent>;
}

export function OrderIntentAvailabilityFromJSON(
  json: any
): OrderIntentAvailability {
  return OrderIntentAvailabilityFromJSONTyped(json, false);
}

export function OrderIntentAvailabilityFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): OrderIntentAvailability {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    buy: (json["buy"] as Array<any>).map(OrderIntentFromJSON),
    sell: (json["sell"] as Array<any>).map(OrderIntentFromJSON),
  };
}

export function OrderIntentAvailabilityToJSONRecursive(
  value?: OrderIntentAvailability | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    buy: (value.buy as Array<any>).map(OrderIntentToJSON),
    sell: (value.sell as Array<any>).map(OrderIntentToJSON),
  };
}

export function OrderIntentAvailabilityToJSON(
  value?: OrderIntentAvailability | null
): any {
  return OrderIntentAvailabilityToJSONRecursive(value, false);
}
