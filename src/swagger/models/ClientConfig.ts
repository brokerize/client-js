/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  BrokerClientCfg,
  BrokerClientCfgFromJSON,
  BrokerClientCfgFromJSONTyped,
  BrokerClientCfgToJSON,
} from "./BrokerClientCfg";
import {
  BrokerEnvFilterType,
  BrokerEnvFilterTypeFromJSON,
  BrokerEnvFilterTypeFromJSONTyped,
  BrokerEnvFilterTypeToJSON,
} from "./BrokerEnvFilterType";
import {
  ClientConfigMaintenanceStatus,
  ClientConfigMaintenanceStatusFromJSON,
  ClientConfigMaintenanceStatusFromJSONTyped,
  ClientConfigMaintenanceStatusToJSON,
} from "./ClientConfigMaintenanceStatus";
import {
  ClientConfigOAuthLoginForm,
  ClientConfigOAuthLoginFormFromJSON,
  ClientConfigOAuthLoginFormFromJSONTyped,
  ClientConfigOAuthLoginFormToJSON,
} from "./ClientConfigOAuthLoginForm";
import {
  ClientConfigPage,
  ClientConfigPageFromJSON,
  ClientConfigPageFromJSONTyped,
  ClientConfigPageToJSON,
} from "./ClientConfigPage";
import {
  ClientConfigRateLimitPointsToConsume,
  ClientConfigRateLimitPointsToConsumeFromJSON,
  ClientConfigRateLimitPointsToConsumeFromJSONTyped,
  ClientConfigRateLimitPointsToConsumeToJSON,
} from "./ClientConfigRateLimitPointsToConsume";

/**
 *
 * @export
 * @interface ClientConfig
 */
export interface ClientConfig {
  /**
   *
   * @type {boolean}
   * @memberof ClientConfig
   */
  allowRequestsWithoutOrigin?: boolean;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  allowedOrigins?: Array<string>;
  /**
   *
   * @type {BrokerClientCfg}
   * @memberof ClientConfig
   */
  brokerClientIds?: BrokerClientCfg;
  /**
   *
   * @type {{ [key: string]: BrokerEnvFilterType; }}
   * @memberof ClientConfig
   */
  brokerEnvFilter?: { [key: string]: BrokerEnvFilterType };
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  clientSecrets?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  cognitoClientIds?: Array<string>;
  /**
   *
   * @type {boolean}
   * @memberof ClientConfig
   */
  enabled?: boolean;
  /**
   *
   * @type {string}
   * @memberof ClientConfig
   */
  legalEntityName?: string;
  /**
   *
   * @type {ClientConfigMaintenanceStatus}
   * @memberof ClientConfig
   */
  maintenanceStatus?: ClientConfigMaintenanceStatus | null;
  /**
   *
   * @type {Array<number>}
   * @memberof ClientConfig
   */
  managingUserIds?: Array<number>;
  /**
   *
   * @type {string}
   * @memberof ClientConfig
   */
  name?: string;
  /**
   *
   * @type {ClientConfigOAuthLoginForm}
   * @memberof ClientConfig
   */
  oAuthLoginForm?: ClientConfigOAuthLoginForm | null;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  oAuthReturnToRegularExpressions?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  oAuthReturnToUrls?: Array<string>;
  /**
   *
   * @type {Array<string>}
   * @memberof ClientConfig
   */
  optionalClientSecrets?: Array<string>;
  /**
   *
   * @type {ClientConfigPage}
   * @memberof ClientConfig
   */
  page?: ClientConfigPage | null;
  /**
   *
   * @type {ClientConfigRateLimitPointsToConsume}
   * @memberof ClientConfig
   */
  rateLimitPointsToConsume?: ClientConfigRateLimitPointsToConsume;
}

export function ClientConfigFromJSON(json: any): ClientConfig {
  return ClientConfigFromJSONTyped(json, false);
}

export function ClientConfigFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ClientConfig {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    allowRequestsWithoutOrigin: !exists(json, "allowRequestsWithoutOrigin")
      ? undefined
      : json["allowRequestsWithoutOrigin"],
    allowedOrigins: !exists(json, "allowedOrigins")
      ? undefined
      : json["allowedOrigins"],
    brokerClientIds: !exists(json, "brokerClientIds")
      ? undefined
      : BrokerClientCfgFromJSON(json["brokerClientIds"]),
    brokerEnvFilter: !exists(json, "brokerEnvFilter")
      ? undefined
      : mapValues(json["brokerEnvFilter"], BrokerEnvFilterTypeFromJSON),
    clientSecrets: !exists(json, "clientSecrets")
      ? undefined
      : json["clientSecrets"],
    cognitoClientIds: !exists(json, "cognitoClientIds")
      ? undefined
      : json["cognitoClientIds"],
    enabled: !exists(json, "enabled") ? undefined : json["enabled"],
    legalEntityName: !exists(json, "legalEntityName")
      ? undefined
      : json["legalEntityName"],
    maintenanceStatus: !exists(json, "maintenanceStatus")
      ? undefined
      : ClientConfigMaintenanceStatusFromJSON(json["maintenanceStatus"]),
    managingUserIds: !exists(json, "managingUserIds")
      ? undefined
      : json["managingUserIds"],
    name: !exists(json, "name") ? undefined : json["name"],
    oAuthLoginForm: !exists(json, "oAuthLoginForm")
      ? undefined
      : ClientConfigOAuthLoginFormFromJSON(json["oAuthLoginForm"]),
    oAuthReturnToRegularExpressions: !exists(
      json,
      "oAuthReturnToRegularExpressions"
    )
      ? undefined
      : json["oAuthReturnToRegularExpressions"],
    oAuthReturnToUrls: !exists(json, "oAuthReturnToUrls")
      ? undefined
      : json["oAuthReturnToUrls"],
    optionalClientSecrets: !exists(json, "optionalClientSecrets")
      ? undefined
      : json["optionalClientSecrets"],
    page: !exists(json, "page")
      ? undefined
      : ClientConfigPageFromJSON(json["page"]),
    rateLimitPointsToConsume: !exists(json, "rateLimitPointsToConsume")
      ? undefined
      : ClientConfigRateLimitPointsToConsumeFromJSON(
          json["rateLimitPointsToConsume"]
        ),
  };
}

export function ClientConfigToJSONRecursive(
  value?: ClientConfig | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    allowRequestsWithoutOrigin: value.allowRequestsWithoutOrigin,
    allowedOrigins: value.allowedOrigins,
    brokerClientIds: BrokerClientCfgToJSON(value.brokerClientIds),
    brokerEnvFilter:
      value.brokerEnvFilter === undefined
        ? undefined
        : mapValues(value.brokerEnvFilter, BrokerEnvFilterTypeToJSON),
    clientSecrets: value.clientSecrets,
    cognitoClientIds: value.cognitoClientIds,
    enabled: value.enabled,
    legalEntityName: value.legalEntityName,
    maintenanceStatus: ClientConfigMaintenanceStatusToJSON(
      value.maintenanceStatus
    ),
    managingUserIds: value.managingUserIds,
    name: value.name,
    oAuthLoginForm: ClientConfigOAuthLoginFormToJSON(value.oAuthLoginForm),
    oAuthReturnToRegularExpressions: value.oAuthReturnToRegularExpressions,
    oAuthReturnToUrls: value.oAuthReturnToUrls,
    optionalClientSecrets: value.optionalClientSecrets,
    page: ClientConfigPageToJSON(value.page),
    rateLimitPointsToConsume: ClientConfigRateLimitPointsToConsumeToJSON(
      value.rateLimitPointsToConsume
    ),
  };
}

export function ClientConfigToJSON(value?: ClientConfig | null): any {
  return ClientConfigToJSONRecursive(value, false);
}
