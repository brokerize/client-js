/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    GenericTableRowValueLinkPortfolioAllOf,
    GenericTableRowValueLinkPortfolioAllOfFromJSON,
    GenericTableRowValueLinkPortfolioAllOfFromJSONTyped,
    GenericTableRowValueLinkPortfolioAllOfToJSON,
} from './GenericTableRowValueLinkPortfolioAllOf';
import {
    GenericTableRowValueLinkPortfolioSpecifics,
    GenericTableRowValueLinkPortfolioSpecificsFromJSON,
    GenericTableRowValueLinkPortfolioSpecificsFromJSONTyped,
    GenericTableRowValueLinkPortfolioSpecificsToJSON,
} from './GenericTableRowValueLinkPortfolioSpecifics';

/**
 * 
 * @export
 * @interface GenericTableRowValueLinkPortfolio
 */
export interface GenericTableRowValueLinkPortfolio {
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkPortfolio
     */
    type: GenericTableRowValueLinkPortfolioTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkPortfolio
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof GenericTableRowValueLinkPortfolio
     */
    portfolioId: string;
}


/**
 * @export
 */
export const GenericTableRowValueLinkPortfolioTypeEnum = {
    Portfolio: 'portfolio'
} as const;
export type GenericTableRowValueLinkPortfolioTypeEnum = typeof GenericTableRowValueLinkPortfolioTypeEnum[keyof typeof GenericTableRowValueLinkPortfolioTypeEnum];


export function GenericTableRowValueLinkPortfolioFromJSON(json: any): GenericTableRowValueLinkPortfolio {
    return GenericTableRowValueLinkPortfolioFromJSONTyped(json, false);
}

export function GenericTableRowValueLinkPortfolioFromJSONTyped(json: any, ignoreDiscriminator: boolean): GenericTableRowValueLinkPortfolio {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'type': json['type'],
        'text': json['text'],
        'portfolioId': json['portfolioId'],
    };
}

export function GenericTableRowValueLinkPortfolioToJSONRecursive(value?: GenericTableRowValueLinkPortfolio | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'type': value.type,
        'text': value.text,
        'portfolioId': value.portfolioId,
    };
}

export function GenericTableRowValueLinkPortfolioToJSON(value?: GenericTableRowValueLinkPortfolio | null): any {
    return GenericTableRowValueLinkPortfolioToJSONRecursive(value, false);
}
