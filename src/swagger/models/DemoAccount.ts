/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 1.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import {
  DemoAccountSettings,
  DemoAccountSettingsFromJSON,
  DemoAccountSettingsFromJSONTyped,
  DemoAccountSettingsToJSON,
} from "./DemoAccountSettings";

/**
 *
 * @export
 * @interface DemoAccount
 */
export interface DemoAccount {
  /**
   *
   * @type {string}
   * @memberof DemoAccount
   */
  accountId: string;
  /**
   *
   * @type {string}
   * @memberof DemoAccount
   */
  accountName: string;
  /**
   *
   * @type {DemoAccountSettings}
   * @memberof DemoAccount
   */
  settings: DemoAccountSettings;
}

export function DemoAccountFromJSON(json: any): DemoAccount {
  return DemoAccountFromJSONTyped(json, false);
}

export function DemoAccountFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): DemoAccount {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    accountId: json["accountId"],
    accountName: json["accountName"],
    settings: DemoAccountSettingsFromJSON(json["settings"]),
  };
}

export function DemoAccountToJSONRecursive(
  value?: DemoAccount | null,
  ignoreParent = false
): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }

  return {
    accountId: value.accountId,
    accountName: value.accountName,
    settings: DemoAccountSettingsToJSON(value.settings),
  };
}

export function DemoAccountToJSON(value?: DemoAccount | null): any {
  return DemoAccountToJSONRecursive(value, false);
}
