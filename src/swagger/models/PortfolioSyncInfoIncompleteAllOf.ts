/* tslint:disable */
/* eslint-disable */
/**
 * brokerize
 * The brokerize API allows clients to implement multi-brokerage with a unified interface. For more information, visit brokerize.com
 *
 * The version of the OpenAPI document: 0.0.1-preview
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PortfolioSyncInfoIncompleteAllOf
 */
export interface PortfolioSyncInfoIncompleteAllOf {
    /**
     * 
     * @type {string}
     * @memberof PortfolioSyncInfoIncompleteAllOf
     */
    status?: PortfolioSyncInfoIncompleteAllOfStatusEnum;
}


/**
 * @export
 */
export const PortfolioSyncInfoIncompleteAllOfStatusEnum = {
    Incomplete: 'INCOMPLETE'
} as const;
export type PortfolioSyncInfoIncompleteAllOfStatusEnum = typeof PortfolioSyncInfoIncompleteAllOfStatusEnum[keyof typeof PortfolioSyncInfoIncompleteAllOfStatusEnum];


export function PortfolioSyncInfoIncompleteAllOfFromJSON(json: any): PortfolioSyncInfoIncompleteAllOf {
    return PortfolioSyncInfoIncompleteAllOfFromJSONTyped(json, false);
}

export function PortfolioSyncInfoIncompleteAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): PortfolioSyncInfoIncompleteAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : json['status'],
    };
}

export function PortfolioSyncInfoIncompleteAllOfToJSONRecursive(value?: PortfolioSyncInfoIncompleteAllOf | null, ignoreParent = false): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }

    return {
        


        'status': value.status,
    };
}

export function PortfolioSyncInfoIncompleteAllOfToJSON(value?: PortfolioSyncInfoIncompleteAllOf | null): any {
    return PortfolioSyncInfoIncompleteAllOfToJSONRecursive(value, false);
}
